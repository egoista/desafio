---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/v1/products":
    post:
      summary: Creates a product
      tags:
      - Products
      parameters: []
      responses:
        '201':
          description: product created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
              required:
              - name
              - price
  "/v1/products/search":
    get:
      summary: Search for products
      tags:
      - Products
      parameters:
      - name: ids[]
        in: query
        type: array
        schema:
          type: array
          items:
            type: integer
        collectionFormat: multi
      responses:
        '200':
          description: products found
          content: {}
  "/v1/products/{id}":
    put:
      summary: Updates a product
      tags:
      - Products
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: product updated
          content: {}
        '404':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number_float
              required:
              - name
              - price
    patch:
      summary: Updates a product
      tags:
      - Products
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: product updated
          content: {}
        '404':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
              required:
              - name
              - price
    delete:
      summary: Destroys a product
      tags:
      - Products
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: product destroyed
          content: {}
        '404':
          description: invalid request
          content: {}
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
